name: release
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            target: x86_64-apple-darwin
            out_os: darwin
            out_arch: amd64
          - os: macos-14
            target: aarch64-apple-darwin
            out_os: darwin
            out_arch: arm64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            out_os: linux
            out_arch: amd64
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            out_os: linux
            out_arch: arm64
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            out_os: windows
            out_arch: amd64

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (Linux cross-aarch64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Cargo build (release)
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            cargo build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Package artifact
        shell: bash
        run: |
          set -euo pipefail
          BIN=phpvm
          CASE_OS=${{ matrix.out_os }}
          CASE_ARCH=${{ matrix.out_arch }}
          OUTDIR=dist
          mkdir -p "$OUTDIR"
          if [ "$CASE_OS" = "windows" ]; then
            SRC="target/${{ matrix.target }}/release/${BIN}.exe"
            ZIP="${OUTDIR}/${BIN}-${CASE_OS}-${CASE_ARCH}.zip"
            7z a "$ZIP" "$SRC" >/dev/null
          else
            SRC="target/${{ matrix.target }}/release/${BIN}"
            TARBALL="${OUTDIR}/${BIN}-${CASE_OS}-${CASE_ARCH}.tar.gz"
            tar -C "$(dirname "$SRC")" -czf "$TARBALL" "$(basename "$SRC")"
          fi

      - name: Generate checksums
        shell: bash
        run: |
          cd dist
          shopt -s nullglob
          rm -f SHA256SUMS
          for f in *.{tar.gz,zip}; do
            sha256sum "$f" >> SHA256SUMS
          done

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}